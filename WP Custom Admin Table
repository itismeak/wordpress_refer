   //custom admin table display new admin menu plugin
   refer link   ->  1) https://wpengineer.com/2426/wp_list_table-a-step-by-step-guide/  (Basic Refer Easy)
                    2) https://www.nxtut.com/wp-custom-admin-table/    

1)        // code to make admin menu and page for plugin
        add_action( 'admin_menu', 'my_new_plugin_menu' );
        //Not necessary to create new plug in use post or page
        function my_new_plugin_menu() {
            add_menu_page('plugin-customization_1', 'Admin_table', //Admin_table menu name 
            'manage_options','formainnn','my_render_list_page');
        }

        //diplay new plugin contents
        function my_render_list_page(){
          $myListTable = new My_List_Table();
          echo '<div class="wrap"><h2>my_example_table</h2>'; 
          $myListTable->prepare_items(); 
          $myListTable->display(); 
          echo '</div>'; 
        }

        if( ! class_exists( 'WP_List_Table' ) ) {
            require_once( ABSPATH . 'wp-admin/includes/class-wp-list-table.php' );
        }

        class My_List_Table extends WP_List_Table {
            //get data from table
            function get_data(){
                global $wpdb; //must use 
                $table_name = $wpdb->prefix.'my_example_table';
                $results = $wpdb->get_results("SELECT * FROM $table_name");

                return $results;
            }
            //admin table display  column declare
            function get_columns(){
                $columns = array(
                'id' => 'ID',
                'name' => 'Name',
                'email' => 'Email',
                'subject' => 'Subject',
                'message' => 'Message',
                'created_at' => 'Created',
                'updated_at' => 'Updated' 
                );
                return $columns;
            }
            //controll overall behaviour of table
            function prepare_items(){
                $columns = $this->get_columns();
                $hidden = array();
                $sortable =array();
                $this->_column_headers = array($columns, $hidden, $sortable);
                $this->items = $this->get_data();
            }

            function column_default( $item, $column_name ) {

                switch( $column_name ) {
                case 'id':
                case 'name':
                case 'email':
                case 'subject':
                case 'message':
                case 'created_at':
                case 'updated_at':
                return  $item -> $column_name;
                default:
                return print_r( $item, true ) ; //Show the whole array for troubleshooting purposes
                }
            } 

        }

   // basic table can view after add some option code below
   
   
   
   
   
        
